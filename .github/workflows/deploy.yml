name: 'Deploy to AWS CloudFormation'

on:
  push:
    branches: [ main, staging, develop, feature-enable-pipeline ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "deploy"
  deploy-website-and-cognito:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code from master branch
        uses: actions/checkout@v2

      # Configure AWS Credential
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.ACCESS_KEY_SECRET }}
          aws-region: us-east-1

      # Deploy to AWS CloudFormation
      - name: Deploy stack to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: WildRydes-Stack
          template: wildrydes_template.yml
          no-fail-on-empty-changeset: "1"
          parameter-overrides: >-
            AccessToken=${{ secrets.ACCESS_TOKEN }},
            Repository=https://github.com/notonprem/wildrydes-site

      # Grab stack outputs
      - name: Grab stack outputs
        shell: bash
        run: |
          aws cloudformation describe-stacks --stack-name WildRydes-Stack --query "Stacks[0].Outputs" --output json > stack-outputs.json
          export JSON_FILE=stack-outputs.json

          userPoolClientId=$(jq -r '.[0].OutputValue' "$JSON_FILE")
          userPoolId=$(jq -r '.[1].OutputValue' "$JSON_FILE")

          echo "echoing variables...."
          echo "userPoolClientId=$userPoolClientId" >> $GITHUB_ENV
          echo "userPoolId=$userPoolId" >> $GITHUB_ENV

      # Push changes to repository
      - name: Push changes to repository
        shell: bash
        run: |
          git config --global user.email "folusomaine@gmail.com"
          git config --global user.name "Foluso Ogunsakin"

          echo "machine github.com login folusomaine password ${{ secrets.ACCESS_TOKEN }}" > ~/.netrc

          git clone https://github.com/notonprem/wildrydes-site.git
          cd wildrydes-site

          echo "echoing variables...."
          echo $userPoolId
          echo $userPoolClientId

          sed -i "s/userPoolId:.*/userPoolId: $userPoolId,/" js/config.js
          sed -i "s/userPoolClientId:.*/userPoolClientId: $userPoolClientId,/" js/config.js

          cat js/config.js

          git add .
          commitMessage=$(git status --short)
          echo "commitMessage=$commitMessage" >> $GITHUB_ENV

          git commit -m $commitMessage
          git push
